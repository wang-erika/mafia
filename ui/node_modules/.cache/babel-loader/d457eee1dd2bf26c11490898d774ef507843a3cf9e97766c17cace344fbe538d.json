{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Chat\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  id: \"messages\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Type a message...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg\n    }, _toDisplayString(msg), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_cache","$event","$data","message","onKeyup","_withKeys","args","$options","sendMessage","placeholder","_hoisted_3","_Fragment","_renderList","messages","msg","key","_toDisplayString"],"sources":["/Users/cynthiama/Documents/mafia/ui/chat-client/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h3>Chat</h3>\n    <input v-model=\"message\" @keyup.enter=\"sendMessage\" placeholder=\"Type a message...\">\n    <ul id=\"messages\">\n      <li v-for=\"msg in messages\" :key=\"msg\">{{ msg }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client';\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      socket: null,\n      message: '',\n      messages: []\n    };\n  },\n  created() {\n    this.socket = io('http://localhost:3000');\n\n    this.socket.on('chat message', (msg) => {\n      this.messages.push(msg);\n    });\n  },\n  methods: {\n    sendMessage() {\n      if (this.message.trim() !== '') {\n        this.socket.emit('chat message', this.message);\n        this.message = ''; // Clear input field after sending\n      }\n    }\n  }\n};\n</script>\n\n<!-- Add your styles here -->\n<style>\n#messages {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;gCAChBC,mBAAA,CAAa,YAAT,MAAI;;EAEJC,EAAE,EAAC;AAAU;;uBAHnBC,mBAAA,CAMM,OANNC,UAMM,GALJC,UAAa,E,gBACbJ,mBAAA,CAAoF;IAHxF,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAHnCK,SAAA,KAAAC,IAAA,KAG2CC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEG,WAAW,EAAC;iEAAhDP,KAAA,CAAAC,OAAO,E,GACvBR,mBAAA,CAEK,MAFLe,UAEK,I,kBADHb,mBAAA,CAAqDc,SAAA,QAL3DC,WAAA,CAKwBV,KAAA,CAAAW,QAAQ,EAAfC,GAAG;yBAAdjB,mBAAA,CAAqD;MAAxBkB,GAAG,EAAED;IAAG,GAAAE,gBAAA,CAAKF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}